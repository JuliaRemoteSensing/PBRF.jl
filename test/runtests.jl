using DelimitedFiles: readdlm
using FastGaussQuadrature: gausslegendre
using PolarizedBRF
using Test

const PBRF_BENCHMARK_0 = [1.054548 -0.005217 0 0
                          -0.005217 0.262763 0 0
                          0 0 0.146687 0.032284
                          0 0 -0.032284 0.208790]

const PBRF_BENCHMARK_1 = [0.039998 0.007864 -0.014080 -0.000034
                          0.007864 0.045349 0.035117 -0.019115
                          0.014080 -0.035117 0.164078 -0.032249
                          -0.000034 -0.019115 0.032249 0.114666]

const PACKED_BENCHMARK = [1.00000 0.00000 0.00000 0.74467 0.00000 0.00000
                          1.43441 0.00000 0.00000 1.46864 0.00000 0.00000
                          1.50572 3.14149 2.65268 1.29731 -0.33733 0.20024
                          0.54855 1.17599 1.15803 0.77997 -0.05930 0.04624
                          0.53618 0.93526 0.42101 0.29439 -0.28560 0.24569
                          0.15686 0.14711 0.20261 0.41609 -0.04820 0.06012
                          0.36933 0.66451 0.24499 0.18811 -0.15777 0.27199
                          0.57785 0.35170 0.47412 0.96315 -0.03832 0.07655
                          1.04138 1.42494 0.91249 0.80178 -0.29723 0.04728
                          1.43661 1.15526 1.41074 1.99388 -0.28707 0.06245
                          1.38072 2.06382 1.72864 1.49775 -0.88440 -1.06159
                          0.77632 0.86281 0.67159 1.01182 -0.09748 -1.27747
                          0.10445 0.62844 -0.19868 -0.52154 0.46542 -1.31238
                          -1.04618 -1.16241 -1.18892 -1.12413 0.45648 0.26939
                          -0.73759 -0.80468 -0.79180 -0.80341 0.14217 0.26695
                          -0.58212 -0.65566 -0.60294 -0.61615 0.08731 0.28520
                          -0.40919 -0.47367 -0.40752 -0.42301 0.05108 0.27611
                          -0.24227 -0.29727 -0.22556 -0.23630 0.02282 0.25314
                          -0.07639 -0.11896 -0.05332 -0.05894 0.00069 0.21416
                          0.06957 0.04058 0.10195 0.10141 -0.02940 0.16619
                          0.18259 0.16879 0.22548 0.22978 -0.06459 0.09039
                          0.24329 0.24662 0.28311 0.28840 -0.07887 -0.01142
                          0.23201 0.24797 0.25458 0.25808 -0.06208 -0.09369
                          0.16284 0.18262 0.16590 0.16770 -0.03046 -0.12472
                          0.07404 0.09083 0.06387 0.06481 -0.00263 -0.11181
                          -0.00274 0.00828 -0.01870 -0.01826 0.01440 -0.07778
                          -0.05380 -0.04855 -0.07012 -0.07013 0.02179 -0.04017
                          -0.07800 -0.07733 -0.09157 -0.09197 0.02275 -0.00786
                          -0.07987 -0.08227 -0.08927 -0.08990 0.01984 0.01592
                          -0.06583 -0.06986 -0.07060 -0.07126 0.01450 0.03053
                          -0.04263 -0.04704 -0.04292 -0.04343 0.00772 0.03607
                          -0.01686 -0.02066 -0.01356 -0.01384 0.00083 0.03328
                          0.00555 0.00300 0.01090 0.01083 -0.00458 0.02428
                          0.02045 0.01934 0.02612 0.02617 -0.00746 0.01251
                          0.02637 0.02649 0.03094 0.03106 -0.00772 0.00140
                          0.02447 0.02537 0.02719 0.02731 -0.00608 -0.00680
                          0.01754 0.01875 0.01829 0.01840 -0.00355 -0.01131
                          0.00883 0.00995 0.00796 0.00804 -0.00101 -0.01255
                          0.00112 0.00189 -0.00078 -0.00073 0.00092 -0.01142
                          -0.00379 -0.00346 -0.00602 -0.00601 0.00193 -0.00891
                          -0.00521 -0.00529 -0.00714 -0.00715 0.00198 -0.00576
                          -0.00353 -0.00389 -0.00464 -0.00465 0.00123 -0.00243
                          0.00000 -0.00044 0.00000 0.00000 0.00003 0.00087]

@testset "PolarizedBRF.jl" begin
    @testset "Benchmark results for PBRF calculation" begin
        coeff = readdlm(joinpath(@__DIR__, "..", "fixture", "coeff.txt"))
        NG = 49

        @testset "StandardQuadrature" begin
            R, x, w = PolarizedBRF.Wrapper.run_pbrf(1.0, NG, coeff; ε=1e-7, mode=PolarizedBRF.StandardQuadrature)

            @test isapprox(R[:, :, 25, 25, 1], PBRF_BENCHMARK_0; atol=1e-6, rtol=1e-6)

            @test isapprox(R[:, :, 25, 25, 2], PBRF_BENCHMARK_1; atol=1e-5, rtol=1e-5)
        end

        @testset "CustomQuadrature" begin
            x, w = gausslegendre(NG)
            @. x = (x + 1) * 0.5
            @. w = w * 0.5

            R, _ = PolarizedBRF.Wrapper.run_pbrf(1.0, NG, coeff; ε=1e-7, mode=PolarizedBRF.CustomQuadrature, x=x, w=w)

            @test isapprox(R[:, :, 25, 25, 1], PBRF_BENCHMARK_0; atol=1e-6, rtol=1e-6)

            @test isapprox(R[:, :, 25, 25, 2], PBRF_BENCHMARK_1; atol=1e-5, rtol=1e-5)
        end
    end

    @testset "Packed Media Re-expansion" begin
        coeff_raw = readdlm(joinpath(@__DIR__, "..", "fixture", "coeff2.txt"))
        Cext = 2.84241
        Csca = 2.57762
        f = 0.2
        reff = 0.6
        λ = 0.63
        lmax = size(coeff_raw)[1] - 1
        (; coeff, F) = PolarizedBRF.ssf_correction(coeff_raw, Cext, Csca; volume_fraction=f, r=2π * reff / λ,
                                                   strategy=PolarizedBRF.Ito18, output_dataframe=true)

        s = size(PACKED_BENCHMARK)[1]
        @test isapprox(coeff[1:s, :], PACKED_BENCHMARK; atol=1e-5, rtol=1e-5)
    end
end
